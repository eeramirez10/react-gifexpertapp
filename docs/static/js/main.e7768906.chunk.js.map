{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","onChange","target","value","type","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","img","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAEEJ,IAGJF,GAAc,SAAAO,GAAI,OAAML,GAAN,mBAAoBK,OAGtCJ,EAAc,MAKd,SACI,uBACIK,SAlBc,SAACH,GAAD,OAAOF,EAAcE,EAAEI,OAAOC,QAmB5CC,KAAK,OACLD,MAASR,O,+BCzBZU,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAI,kBAA4B,CAAEC,GAA9B,EAAGA,GAA+BC,MAAlC,EAAOA,MAAkCT,IAAzC,EAAcU,OAAuCC,iBAAiBX,QARzE,kBAUZM,GAVY,4CAAH,sDCCPM,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IAGtC,OACI,sBAAKa,UAAY,yCAAjB,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAItB,ECJwB,SAAEA,GAE1B,MAA0BZ,mBAAS,CAC/BmB,KAAK,GACLY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WAENvB,EAAQC,GACHuB,MAAM,SAAAC,GAEHC,YAAW,WACPJ,EAAU,CAAEd,KAAK,YAAIiB,GAAOL,SAAS,MACvC,UAIX,CAACnB,IAKGoB,EDnB0BM,CAAc1B,GAAnCY,EAAZ,EAAOL,KAAcY,EAArB,EAAqBA,QAKrB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDf,EAApD,OAEEmB,GAAW,mBAAGJ,UAAU,mCAAb,8BAIb,qBAAKA,UAAU,YAAf,SAEKH,EAAOH,KAAI,SAAAkB,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEG1CkB,EAtBO,WAElB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,qCACA,iDACI,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAGQ0C,EAAWpB,KAAK,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCV/D8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.e7768906.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => setInputValue(e.target.value)\r\n    \r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(!inputValue) return;\r\n\r\n        \r\n        setCategories(cats => [ inputValue,...cats ])\r\n\r\n        //Limpia el input\r\n        setInputValue('')\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                onChange={ handleInputChange }\r\n                type=\"text\"\r\n                value = {inputValue}\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n","\r\n//encodeURI justa las palabras que vengan con espacios\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=lxsIqB5JCwN9ppoRMRX13pdyl9x4hv0J`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(({ id, title, images }) => ({ id, title, url: images.downsized_medium.url }))\r\n\r\n    return gifs;\r\n\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    \r\n    return (\r\n        <div className = 'card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n \r\n\r\n    const {data:images , loading } = useFetchGifs( category );\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\"> Cargando ....  </p>}\r\n\r\n            \r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {images.map(img => <GifGridItem key={img.id} {...img} />)}\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nimport React from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n\r\n        getGifs(category)\r\n            .then( imgs => {\r\n\r\n                setTimeout(() =>{\r\n                    setState( { data:[...imgs], loading: false} )\r\n                },3000)\r\n                \r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    \r\n    return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n    \r\n\r\nconst GiftExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    return (\r\n        <>\r\n        <h2> GiftExpertApp </h2>\r\n            <AddCategory setCategories = { setCategories} />\r\n            <hr/>\r\n            <ul>\r\n                {\r\n\r\n                    categories.map( category => <GifGrid key={ category } category={ category }/> )\r\n                }\r\n\r\n            </ul>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    <GiftExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}